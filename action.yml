name: 'monopublish-action'
description: 'This action helps publishing independent, logically related packages in a monorepo which are not dependent on one another'
author: 'James Mortensen'
inputs:
  check-if-deploy:
    description: 'Check commit message for deploy trigger and package name and set a GITHUB_OUTPUT. (Default behavior if no npm-exec specified)'
    required: false
    default: false
  npm-exec:
    description: 'NPM run script to execute in the package. Also, can be test, install, and publish'
    required: false
  dry-run:
    description: 'For dry runs. Go through the process but do not publish.'
    required: false
    default: false
outputs:
  should_deploy:
    description: "True if we should run other steps/jobs prior to publishing"
    value: ${{ steps.triggers.outputs.should_deploy }}
runs:
  using: 'composite'
  steps:
  - name: Get action triggers
    shell: bash
    id: triggers
    env:
      CHECK_IF_DEPLOY: ${{ inputs.check-if-deploy }}
      DRY_RUN_INPUT: ${{ inputs.dry-run }}
      NPM_EXEC: ${{ inputs.npm-exec }}
      GH_RUN_ID: ${{ github.run_id }}
    run: |
      # extract package name to deploy, using the folder name
      commit_message="`git log -1 --pretty=format:"%s"`"
      echo "commit_message = "$commit_message
      PACKAGE_NAME=`echo "$commit_message" | sed -rn 's/.*\(.*\):[ \t]*(.*)/\1/p'`
      echo "monopublish - PACKAGE_NAME=$PACKAGE_NAME"
      if [[ -z "$PACKAGE_NAME" ]]; then
        echo $PACKAGE_NAME not found. Cancelling workflow run $GH_RUN_ID...
        gh run cancel $GH_RUN_ID
        gh run watch $GH_RUN_ID
        exit 0;
      fi
      ls
      pwd
      if [[ "$DRY_RUN_INPUT" == "true" ]]; then
        export DRY_RUN_ARG="-d"
      fi
      if [[ -z "$NPM_EXEC" ]]; then
        CHECK_IF_DEPLOY=true
      fi
      if [[ "$CHECK_IF_DEPLOY" == "true" ]]; then
        echo "monopublish - "$GITHUB_ACTION_PATH/push-to-deploy "$commit_message" --set-output
        $GITHUB_ACTION_PATH/push-to-deploy "$commit_message" --set-output
      fi
      if [[ -n "$NPM_EXEC" ]]; then
        $GITHUB_ACTION_PATH/push-to-deploy "$commit_message"
      fi
  - name: Status
    shell: bash
    run: echo "monopublish - Should deploy:" ${{ steps.triggers.outputs.should-deploy }}
    
